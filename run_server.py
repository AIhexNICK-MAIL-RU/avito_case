#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
"""

import os
import socket
import subprocess
import sys
from app import app, load_model

def get_local_ip():
    """–ü–æ–ª—É—á–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π IP –∞–¥—Ä–µ—Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è IP
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        ip = s.getsockname()[0]
        s.close()
        return ip
    except Exception:
        return "127.0.0.1"

def main():
    print("ü§ñ –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
    print("üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...")
    if load_model():
        print("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    else:
        print("‚ö†Ô∏è  –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—É—á–µ–Ω–∏–∏")
    
    # –ü–æ–ª—É—á–∞–µ–º IP –∞–¥—Ä–µ—Å
    local_ip = get_local_ip()
    port = int(os.environ.get('PORT', 5000))
    
    print("\nüåê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–µ:")
    print(f"   –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://localhost:{port}")
    print(f"   –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø:   http://{local_ip}:{port}")
    print(f"   –ü–æ—Ä—Ç:            {port}")
    
    print("\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("   - –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—Ç–∞: export PORT=8080")
    print("   - –î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–ª–∞–¥–∫–∏: export FLASK_DEBUG=true")
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
    print("   –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    print("-" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app.run(
        host='0.0.0.0',
        port=port,
        debug=False,  # –û—Ç–∫–ª—é—á–∞–µ–º –æ—Ç–ª–∞–¥–∫—É –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        threaded=True
    )

if __name__ == '__main__':
    main() 